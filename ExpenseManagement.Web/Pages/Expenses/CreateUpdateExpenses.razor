@page "/app/expenses-form/{ExpenseId:long}"


<PageTitle>Create Expense</PageTitle>

<div class="container mt-4">
	<div class="card shadow-lg border-0">
		<div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
			<h4 class="mb-0">
				@if (ExpenseId == 0)
				{
					<span><i class="bi bi-plus-circle"></i> Create Expense</span>
				}
				else
				{
					<span><i class="bi bi-pencil-square"></i> Edit Expense</span>
				}
			</h4>
			<a href="/app/expenses" class="btn btn-light btn-sm">
				<i class="bi bi-arrow-left"></i> Back to List
			</a>
		</div>

		<div class="card-body">
			<div>
				<div class="row mb-3">
					@if (ExpenseId > 0)
					{
						<div class="col-md-4">
							<label class="form-label fw-semibold">Expense ID</label>
							<InputNumber @bind-Value="ExpensesDto.ExpenseId" class="form-control" readonly />
						</div>
					}
					<div class="col-md-4">
						<label class="form-label fw-semibold">Expense Category Id</label>
						<InputNumber @bind-Value="ExpensesDto.ExpenseCategoryId" class="form-control" />
					</div>

					<div class="col-md-4">
						<label class="form-label fw-semibold">Expense Amount</label>
						<InputNumber @bind-Value="ExpensesDto.ExpenseAmount" class="form-control" placeholder="Enter expense amount" />
					</div>

					<div class="col-md-4">
						<label class="form-label fw-semibold">Expense Date</label>
						<InputDate @bind-Value="ExpensesDto.ExpenseDate" class="form-control" />
					</div>

					<div class="col-md-12">
						<label class="form-label fw-semibold">Payment Method</label>
						<InputTextArea @bind-Value="ExpensesDto.PaymentMethod" class="form-control" rows="3" placeholder="Write remarks..." />
					</div>

					<div class="col-md-12">
						<label class="form-label fw-semibold">Remarks</label>
						<InputTextArea @bind-Value="ExpensesDto.Remarks" class="form-control" rows="3" placeholder="Write remarks..." />
					</div>
				</div>

				<button class="btn btn-success" @onclick="OnSaveEClickAsync">
					@((ExpenseId == 0) ? "Save" : "Update")
				</button>
			</div>
		</div>
	</div>
</div>

@code {
	[Parameter]
	public long ExpenseId { get; set; }

	private ExpensesDto ExpensesDto { get; set; } = new();
	private ExpensesViewModel ExpensesViewModel { get; set; } = new();

	protected async override Task OnInitializedAsync()
	{
		if (ExpenseId > 0)
		{
			ExpensesViewModel = await ExpenseApiService.GetExpenseByIdAsync(ExpenseId);
			SetExpenseData();
		}
	}

	private void SetExpenseData()
	{
		ExpensesDto.ExpenseId = ExpensesViewModel.ExpenseId;
		ExpensesDto.ExpenseCategoryId = ExpensesViewModel.ExpenseCategoryId;
		ExpensesDto.ExpenseAmount = ExpensesViewModel.ExpenseAmount;
		ExpensesDto.ExpenseDate = ExpensesViewModel.ExpenseDate;
		ExpensesDto.PaymentMethod = ExpensesViewModel.PaymentMethod;
		ExpensesDto.Remarks = ExpensesViewModel.Remarks;
	}

	private async Task OnSaveEClickAsync()
	{
		if (ExpenseId == 0)
		{
			await ExpenseApiService.CreateExpenseAsync(ExpensesDto);
		}
		else
		{
			await ExpenseApiService.UpdateExpenseAsync(ExpensesDto);
		}

		NavigationManager.NavigateTo("/app/expenses");
	}

}